#!/usr/bin/env perl6
# √counter *
# TODO \n takes longer for some reason
; use v6.c
; no strict
; no worries
; no fatal
; @*ARGS.elems or die "err: want information but need addresses\nfix: use `√counter *`"
; @ls = @*ARGS.map(*.IO).grep(*~~:f&:r)
; @ls.elems or die "err: want files and need files\nfix: touch a file\nfix: goto another directory"
; @titles = <bytes codes chars words lines files>
; @stats = @ls.map({; $s = .slurp(:enc<utf8-c8>); @w = .words(:enc<utf8-c8>); [
	$s.encode('utf8-c8').bytes
	, $s.chars
	, @w.join.chars
	, @w.elems
	, .lines(:enc<utf8-c8>).elems
	, .relative
]})
; $fmt = reduce({; done($^a, $^b, 0)}, @titles.map(*.chars), |@stats.map({; .map(*.chars)})).map('%+'~ * ~'s').join(' ')
; $fmt.sprintf(@titles).uc.say
; $fmt.sprintf(@titles.map({; S:g/./-/})).say
; @stats.map({; $fmt.sprintf(|$_).say})
; sub done(@a, @b, Int $n) {
	; return $n < @a.elems - 1
		?? [(@a[$n] < @b[$n]?? @b[$n]!! @a[$n]), |done(@a, @b, $n+1)]
		!! [0]
}
